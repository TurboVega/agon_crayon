// Input Binary File: cabbage\SEQ08.BIN
// Output Source File: cabbage\cabbage_seq08.h
// Identifier: cabbage_seq08

#ifndef _HEX_cabbage_seq08_
#define _HEX_cabbage_seq08_

#ifdef _COMPILE_HEX_DATA_
// Note: This is a generated source file!

__root const unsigned char gcabbage_seq08Data[] =
{
/* 00000000 */  0x00,0x45,0xC9,0xC9,0xC9,0x49,0x00,0x00,0x00,0xC9,0xDE,0xDE,0xDE,0xDD,0x89,0x45,0x99,0xDE,0xEE,0xEE,0xEE,0xDE,0xDE,0x89,0xDD,0xEE,0xEF,0xEF,0xEE,0xDE,0xDE,0xDD,
/* 00000020 */  0xDD,0xEE,0xEE,0xEE,0xEE,0xDE,0xDE,0xDD,0x89,0xDE,0xDE,0xDE,0xDE,0xDE,0xDE,0xC9,0x49,0xDD,0xDE,0xDE,0xDE,0xDE,0xC9,0x45,0x00,0x45,0xC9,0xDD,0xC9,0x49,0x00,0x00,
/* 00000040 */  0x00,0x45,0x89,0xC9,0xC9,0x49,0x45,0x00,0x00,0x89,0xDE,0xEE,0xDE,0xDE,0x49,0x00,0x89,0xDE,0xEE,0xEF,0xEE,0xDE,0xDD,0x49,0xDD,0xEE,0xEE,0xEF,0xEE,0xDE,0xDE,0xDD,
/* 00000060 */  0xDD,0xEE,0xEE,0xEE,0xEE,0xDE,0xDE,0xDD,0xC9,0xDE,0xDE,0xDE,0xDE,0xDE,0xDE,0xC9,0x49,0xDD,0xDE,0xDE,0xDE,0xDE,0xDD,0x45,0x00,0x49,0xC9,0xC9,0xC9,0x49,0x45,0x00,
/* 00000080 */  0x00,0x00,0x49,0xC9,0xC9,0x49,0x00,0x00,0x00,0x89,0xDD,0xDE,0xDE,0xDE,0xC9,0x00,0x99,0xEE,0xEE,0xEF,0xEE,0xEE,0xDD,0x49,0xDD,0xEE,0xEE,0xEE,0xEE,0xEE,0xDD,0xC9,
/* 000000A0 */  0xDD,0xDE,0xDE,0xEE,0xEE,0xDE,0xDE,0xDD,0xDD,0xDE,0xDE,0xDE,0xDE,0xDE,0xDE,0xC9,0x45,0xDD,0xDE,0xDE,0xDE,0xDE,0xDD,0x49,0x00,0x45,0x89,0xC9,0xC9,0xC9,0x45,0x00,
/* 000000C0 */  0x00,0x00,0x49,0xC9,0xC9,0x89,0x45,0x00,0x00,0x89,0xDE,0xEE,0xEE,0xDE,0xC9,0x45,0x49,0xDE,0xEE,0xEE,0xEF,0xEE,0xDE,0x89,0xDD,0xDE,0xEE,0xEE,0xEE,0xEE,0xDE,0xC9,
/* 000000E0 */  0xDD,0xDE,0xDE,0xEE,0xEE,0xDE,0xDD,0xDD,0x89,0xDE,0xDE,0xDE,0xDE,0xDE,0xDE,0xDD,0x45,0xC9,0xDE,0xDE,0xDE,0xDE,0xDD,0x49,0x00,0x00,0x49,0xC9,0xDD,0xC9,0x49,0x00,
/* 00000100 */  0x00,0x45,0x89,0xC9,0xC9,0xC9,0x45,0x00,0x00,0xC9,0xEE,0xEE,0xEE,0xDE,0xC9,0x45,0xC9,0xDE,0xEE,0xEE,0xEF,0xEE,0xDE,0xC9,0xDD,0xDE,0xEE,0xEE,0xEE,0xEE,0xDE,0xC9,
/* 00000120 */  0xDD,0xDE,0xDE,0xEE,0xEE,0xDE,0xDD,0xC9,0x89,0xDE,0xDE,0xDE,0xDE,0xDE,0xDE,0x89,0x00,0x89,0xDD,0xDE,0xDE,0xDE,0xC9,0x45,0x00,0x00,0x45,0x89,0xDD,0x89,0x45,0x00,
/* 00000140 */  0x00,0x45,0x49,0xDD,0xC9,0x89,0x45,0x00,0x45,0xDD,0xEE,0xEE,0xEE,0xDE,0xDD,0x45,0xC9,0xDE,0xDE,0xEE,0xEF,0xEE,0xDE,0x49,0xDE,0xDE,0xDE,0xEE,0xEF,0xEE,0xDE,0xC9,
/* 00000160 */  0xDD,0xDE,0xDE,0xEE,0xEE,0xDE,0xDE,0xC9,0x49,0xDD,0xDE,0xDE,0xDE,0xDE,0xDD,0x49,0x00,0x89,0xDE,0xDE,0xDE,0xDE,0xC9,0x45,0x00,0x00,0x49,0xC9,0xDD,0x89,0x45,0x00,
/* 00000180 */  0x00,0x45,0x89,0xDD,0xC9,0x49,0x45,0x00,0x49,0xDD,0xDE,0xEE,0xEE,0xDE,0xC9,0x45,0xDD,0xDE,0xDE,0xEE,0xEE,0xEF,0xDE,0xC9,0xDD,0xDE,0xDE,0xEE,0xEF,0xEE,0xDE,0xC9,
/* 000001A0 */  0xC9,0xDE,0xDE,0xEE,0xEE,0xEE,0xDE,0xC9,0x49,0xDD,0xDE,0xDE,0xDE,0xDE,0xDD,0x49,0x00,0xC9,0xDE,0xDE,0xDE,0xDD,0x89,0x00,0x00,0x45,0x89,0xDD,0xC9,0x89,0x45,0x00,
/* 000001C0 */  0x00,0x45,0xC9,0xDD,0xDD,0x49,0x00,0x00,0x49,0xDD,0xDE,0xDE,0xEE,0xDE,0x89,0x45,0xDD,0xDE,0xDE,0xEE,0xEF,0xEE,0xDE,0x89,0xDD,0xDE,0xDE,0xEE,0xEF,0xEF,0xDE,0xC9,
/* 000001E0 */  0xC9,0xDD,0xDE,0xEE,0xEE,0xEE,0xDE,0x89,0x89,0xDE,0xDE,0xDE,0xDE,0xDE,0xDE,0x89,0x45,0xDD,0xDE,0xDE,0xDE,0xDD,0x99,0x45,0x00,0x45,0x89,0xDD,0xC9,0x49,0x00,0x00,
/* 00000200 */  0x00,0x45,0xC9,0xDD,0xC9,0x49,0x00,0x00,0x45,0xDD,0xDE,0xDE,0xEE,0xEE,0x89,0x00,0xC9,0xDE,0xDE,0xDE,0xEE,0xEE,0xDE,0x49,0xDD,0xDD,0xDE,0xEE,0xEF,0xEE,0xDE,0xC9,
/* 00000220 */  0xC9,0xDE,0xDE,0xEE,0xEE,0xEE,0xDE,0xC9,0xC9,0xDE,0xDE,0xDE,0xEE,0xEE,0xDD,0x49,0x49,0xDD,0xDE,0xDE,0xDD,0xDD,0xC9,0x45,0x00,0x45,0xC9,0xDD,0xC9,0x49,0x00,0x00,
/* 00000240 */  0x00,0x00,0x89,0xDD,0xC9,0x45,0x00,0x00,0x00,0xDD,0xDE,0xDE,0xDE,0xEE,0x89,0x00,0x49,0xDE,0xDE,0xDE,0xEE,0xEE,0xDE,0x49,0xC9,0xDD,0xDE,0xEE,0xEE,0xEE,0xDE,0xC9,
/* 00000260 */  0xDD,0xDE,0xDE,0xEE,0xEE,0xEF,0xEE,0xC9,0xC9,0xDE,0xDE,0xDE,0xEE,0xEE,0xDE,0xC9,0x49,0xDD,0xDE,0xDD,0xDE,0xDE,0xC9,0x45,0x00,0x49,0xC9,0xDD,0xC9,0x89,0x45,0x00,
/* 00000280 */  0x00,0x00,0x49,0xDD,0xDD,0x89,0x00,0x00,0x00,0x89,0xDE,0xDE,0xDE,0xDE,0xC9,0x45,0x45,0xDD,0xDE,0xDE,0xDE,0xEE,0xEE,0x89,0xC9,0xDE,0xDE,0xEE,0xEE,0xEE,0xEE,0xDD,
/* 000002A0 */  0xDD,0xDE,0xDE,0xEE,0xEE,0xEF,0xEE,0xDD,0xC9,0xDE,0xDE,0xDE,0xEE,0xEE,0xDE,0xC9,0x45,0xDD,0xDD,0xDE,0xDE,0xDE,0xDD,0x49,0x00,0x45,0x89,0xC9,0xC9,0x89,0x45,0x00,
/* 000002C0 */  0x00,0x00,0x49,0xDD,0xDD,0xC9,0x45,0x00,0x00,0x89,0xDD,0xDE,0xDE,0xDE,0xDD,0x45,0x89,0xDD,0xDE,0xDE,0xDE,0xDE,0xDE,0x89,0xDD,0xDD,0xDE,0xEE,0xEE,0xEE,0xEE,0xDD,
/* 000002E0 */  0xDD,0xDE,0xDE,0xEE,0xEE,0xEF,0xEE,0xDD,0xC9,0xDE,0xDE,0xDE,0xEE,0xEF,0xDE,0x49,0x45,0xDD,0xDD,0xDE,0xDE,0xDE,0xDD,0x45,0x00,0x00,0x49,0xC9,0xC9,0x89,0x45,0x00
};
#else
extern __root const unsigned char gcabbage_seq08Data[];
#endif
// total bytes = 0x00000300 (768)
#define SIZE_cabbage_seq08  768
#endif
